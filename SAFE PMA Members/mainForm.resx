<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="mainMenuStrip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wCGZBkOhF8aA///
        /wCFYxoFh2QZZYZkGDrHrKEA////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8AhWQZBodk
        GG6HZBsChmQYCodkGaOHZBm4hWMZBP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wCHYxgOhmMZT4RkGQj///8A////AP///wCDYyQA////AP//
        /wCHZBleh2QZYodiHQKHZBqpdlgZ/YVjGkP///8A////AP///wCFZBkFhmQYEoZkGS2EYBcC////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AIFiHAFoTRTDblIV1YZkGSz///8AglsWAoVj
        GVH///8AiGYkBYJhIMuJZyMykG87dX9hMv90WTLSlHRJHpZ1SxH///8AkXA/HoxpLLOHZR0lcFMXamdM
        FHX///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AGdNFXgtIQn/ZUsT4YZk
        GCGGYxgXcFMYuzg4OACNbT4oaFEw+ph4UT+bfFfwZVE5/5d6W5mUeVvOnX9dGaGEZB2Ze1jXg2hFsJZ1
        TwZ/YjVGOCkN7IhmJhb///8A////AP///wD///8A////AP///wD///8Ag14XBYJhGXiBYBhzg2EZbkAv
        DP9mTBT/blIVu4hmISVZRBz1imtAPodsTVdYSDX/pYhrsaeLcP9OQjb/pYx0vIZyXuSulX0TrZJ5yIhy
        Xf+Od1+yb1tE5IVrTqszKBv/eV45YohlIwyJZiMit6uWAP///wCHYxkPhmMYE4VgHAGPj48AeFoYP1dA
        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
        l//Kua3/0MS7/5aQjP97eHb/NTU0/5iXlv/Y19f/29ra/4uLi//IyMj/m5ub/66urv+enp7/g4OE/0xM
        TP8BAQH/pqam/1RUVOb5+fkO////APny8gL///8A////AP///wD///8A////AIJhGBJQOw/cQTIb/4Bo
        Tv+ljHT/m4l6/7uroP/VyL//29HM/7y3tP+DgYD/Gxsb/ysrK/+Tk5P/0dHR/8/P0P/Gxsf/zs7O/6ys
        rf+qqqr/tra2/xkZGf90dHT/fX5+4fr6+gj///8AzMvLNLe2tU3///8A////AP///wD///8A////AHla
        F1JHNRf7k3ZU/6qPdf+wm4j/c2hg/7ywqP/e1M3/5+Dd/+/q6P/V09L/U1NT/wEBAf8HBwf/PT0+/5KS
        kv+rq6z/0tLS/76+vv+6urv/dXV2/wcHB/97e3z739/fVu3t7QOTkpJnkI+P7M3MyyX///8A////AP//
        /wD///8AgWQcAnBVH5tUQy7/pIht/7Weif++q5z/n5OL/4N9eP+JhYL/pqOi/8vIyP/i4OD/y8rK/6en
        p//BwcH/wsLC/7e3t/+mpqb/kJCQ/4SEhP99fn7/fHx8/35+fv+QkJH6urq6zb29ve3j4eH/oZ+fqu/s
        6AL///8A////AP///wD///8Ai2gtDm5UMM9pV0X/sJeB/7+rmv/IuKz/vrOs/4F7eP8BAQH/AgIC/1JS
        Uv/Kycn///7+/+7u7v+MjIz/gYGB/7Ozs//f39//9fX1/+vr6//r6+v/8/Pz/8LCwv/AwMH/5eTk//n3
        9/+koqH18e7tIP///wD///8A////AP///wD///8Ak3NGI2hTOOZ9alr/uaOR/8i2qP/Uxr3/s6ql/5WR
        jv/IxcP/29nY/9rZ2f/39vb/9vb2/7a2t//c3Nz/5eXl/8TExP+qqqr/oaGi/46Ojv+3t7f/7e3t////
        ///+/f3/+/n5/7Gvr//c2dhP////AP///wD///8A////AP///wDiwsIAlnlXOWdUQO2Hdmf/wa6e/86/
        tP/YzMX/49vW/+vm4//y7u3/9/X1//v6+v/Y19f/dXV2/3Bwcf/j4+P/////////////////29vb/+vr
        6/////////////39/P/6+Pj/srCw/9XS0VL///8A////AP///wD///8A////AP///wCfiGkAnYNmQGta
        Se+HeG3/yLap/9TGvf/e1M7/5+Dc/+7p5//08fD/8O7u/4WFhf9HR0j/cXFx/8XFxf/z8/P/////////
        ///8/Pz/l5eY/8XFxv/u7u7//Pv7//b19P+XlZT35uLhJP///wD///8A////AP///wD///8A////AP//
        /wD///8Ap411OXRkVON8cGf/yLmu/9jLw/+/uLP/pqKg/8XBwP9tbGz/FhYW/zY2N/9XV1j/HR0d/0JC
        Q/+SkpL/6Ojo//7+/v/m5ub/xsbF/+Tj4//7+fn/xMLB/pWTkpfx6uoB////AP///wD///8A////AP//
        /wD///8A////AP///wD///8AsJiDIYZ2Z8JoX1j/vbCn/9LHwP/Y0Mv/493a/8rHxf83Nzb/WFhY/7Cv
        r/+np6f/kpGR/6urq//o6Of//Pv7/8HBwf/n5ub/zc3M/vDu7ufo5eWD7+7tCf///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8At6GPBp2MfnthV1DxlIqF/9LIwf/j29f/6uTh/9zY
        1v/m4+L/9vTz//n49//7+vn//Pv7//38+//8+/v/yMfH/6OioubV1dMx8u/vBPb29gD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////ALinmiOIfXSWZV5a7ouF
        gf+8trL/2dTR/+vm5P/x7uz/9PHw//b08//29PP/8/Hx//Tz8v/j4eHP3NzbLf///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////ALOz
        swDAsakVpJqTW4yFgJ6Ff3zLlI+N5aKenPKuq6n1wb687dHOzdXr6Oep9PLxW/Tx8Av///8A////AP//
        /wD///8A////AP///wD///8A//I////gP//H4HD/wkAg/+BAAH8AAAAYgAAACAAAAEgAAAAAgAAAAAAA
        AEAAAAABgAAAAcAAAAPAAAAHAAAAD4AAAB+AAAA/wAAAP4AAAC+AAAAnwAAAA8AAAAHgAAAB8AAAAfgA
        AAH8AAAB/gAAAf8AAAP/gAAP/+AAP//4AH8=
</value>
  </data>
</root>